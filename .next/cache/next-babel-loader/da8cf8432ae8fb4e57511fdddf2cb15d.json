{"ast":null,"code":"var _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar path = require('path');\n\nrequire('dotenv').config({\n  path: path.join(__dirname, '../.env')\n}); // const accountSid = process.env.TWILIO_ACCOUNT_SID;\n// const authToken = process.env.TWILIO_AUTH_TOKEN;\n// const twilio = require('twilio');\n// const clientCheck = twilio(accountSid, authToken).lookups.v1;\n\n\nvar SibApiV3Sdk = require('sib-api-v3-sdk');\n\nvar defaultClient = SibApiV3Sdk.ApiClient.instance; // const { getVipRequestText } = require('../utils/api.helpers')\n// const { Application, User } = require('../models/index');\n// const { AffPartner } = require('../models/affiliates/index')\n// const crypto = require('crypto');\n// const moment = require('moment');\n// const accounting = require('accounting'); \n// const startOfMonthToYesterday = () => moment().startOf('month').add(12, 'hours').format('DD/MM/YYYY') + ' - ' + moment().subtract(1, 'days').format('DD/MM/YYYY');\n// Configure API key authorization: api-key\n\nvar apiKey = defaultClient.authentications['api-key'];\napiKey.apiKey = process.env.SNDBLAPIKEY; // Configure API key authorization: partner-key\n\nvar partnerKey = defaultClient.authentications['partner-key'];\npartnerKey.apiKey = process.env.PARTNERSNDBLAPIKEY; // function to verify mobile number is correct\n\nfunction verify(phoneNumber) {\n  return clientCheck.phoneNumbers(phoneNumber).fetch().then(function () {\n    return true;\n  })[\"catch\"](function () {\n    return false;\n  });\n} // send welcome email\n\n\nfunction sendWelcomeEmail(_ref) {\n  var firstName = _ref.firstName,\n      email = _ref.email;\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email,\n    name: firstName\n  }];\n  sendSmtpEmail.replyTo = {\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.templateId = 17;\n  sendSmtpEmail.tags = ['join'];\n  sendSmtpEmail.params = {\n    FNAME: firstName\n  };\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send application submitted email regardless of whether belongsTo 'Account' as based on req.body data\n\n\nfunction sendApplicationSubmit(_ref2) {\n  var firstName = _ref2.firstName,\n      email = _ref2.email,\n      brand = _ref2.brand,\n      accountId = _ref2.accountId,\n      accountEmailAddress = _ref2.accountEmailAddress,\n      accountCurrency = _ref2.accountCurrency,\n      typeOfAccount = _ref2.typeOfAccount;\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email,\n    name: firstName\n  }];\n  sendSmtpEmail.replyTo = {\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.templateId = 1;\n  sendSmtpEmail.tags = ['application'];\n  sendSmtpEmail.params = {\n    FNAME: firstName,\n    EMAIL: accountEmailAddress,\n    ACCOUNTID: accountId,\n    BRAND: brand,\n    CURRENCY: accountCurrency,\n    STATUS: 'Pending',\n    TYPE: typeOfAccount\n  };\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send application submitted SMS regardless of whether belongsTo 'Account' as based on req.body data\n\n\nfunction sendApplicationSubmitSMS(_ref3) {\n  var firstName = _ref3.firstName,\n      brand = _ref3.brand,\n      accountId = _ref3.accountId,\n      mobileNumber = _ref3.mobileNumber;\n\n  if (verify(mobileNumber)) {\n    var apiInstance = new SibApiV3Sdk.TransactionalSMSApi();\n    var sendTransacSms = new SibApiV3Sdk.SendTransacSms();\n    sendTransacSms.sender = 'EWB';\n    sendTransacSms.recipient = mobileNumber;\n    sendTransacSms.content = \"Hi \".concat(firstName, \". We have received your \").concat(brand, \" application for \").concat(accountId, \". You will receive a response soon. Thanks, EWB.\");\n    sendTransacSms.type = 'transactional';\n    sendTransacSms.tag = 'application';\n    apiInstance.sendTransacSms(sendTransacSms).then(function () {\n      return {\n        success: true,\n        msg: 'SMS sent'\n      };\n    })[\"catch\"](function (err) {\n      return err;\n    });\n  } else return;\n} // send application result regardless of belongsTo using different templateId's\n\n\nfunction sendApplicationResult(_id, subJoinText) {\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  var template = {\n    'approved': 2,\n    'approved and upgraded to VIP': 2,\n    'declined': 3,\n    'approved for cashback': 28,\n    'approved for cashback and upgraded to VIP': 28\n  };\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.replyTo = {\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.tags = ['application'];\n  Application.findById(_id).then(function (a) {\n    var vipStatus = getVipRequestText(subJoinText);\n    sendSmtpEmail.to = [{\n      email: a.accountEmailAddress,\n      name: a.firstName\n    }];\n\n    if (a.belongsTo) {\n      sendSmtpEmail.templateId = template[subJoinText];\n      sendSmtpEmail.params = {\n        FNAME: a.firstName,\n        EMAIL: a.accountEmailAddress,\n        ACCOUNTID: a.accountId,\n        BRAND: a.brand,\n        CURRENCY: a.accountCurrency,\n        SUBJOINTEXT: subJoinText,\n        VIPUPGRADETEXT: vipStatus\n      };\n      apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n        return {\n          success: true,\n          msg: 'Email sent'\n        };\n      })[\"catch\"](function (err) {\n        return err;\n      });\n    } else {\n      Application.findById(a._id).then(function (application) {\n        Promise.all([application, crypto.randomBytes(20)]).then(function (_ref4) {\n          var _ref5 = _slicedToArray(_ref4, 2),\n              application = _ref5[0],\n              buffer = _ref5[1];\n\n          var token = buffer.toString('hex');\n          Application.findByIdAndUpdate(application._id, {\n            applicationToken: token,\n            applicationExpires: Date.now() + 86400000\n          }, {\n            upsert: true,\n            \"new\": true\n          }).then(function () {\n            sendSmtpEmail.templateId = subJoinText === 'declined' ? 3 : 4;\n            sendSmtpEmail.params = {\n              FNAME: a.firstName,\n              EMAIL: a.accountEmailAddress,\n              ACCOUNTID: a.accountId,\n              BRAND: a.brand,\n              CURRENCY: a.accountCurrency,\n              SUBJOINTEXT: subJoinText,\n              VIPUPGRADETEXT: vipStatus,\n              ID: token\n            };\n            apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n              return {\n                success: true,\n                msg: 'Email sent'\n              };\n            })[\"catch\"](function (err) {\n              return err;\n            });\n          })[\"catch\"](function (err) {\n            return err;\n          });\n        })[\"catch\"](function (err) {\n          return err;\n        });\n      })[\"catch\"](function (err) {\n        return err;\n      });\n    }\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send application result sms text\n\n\nfunction sendApplicationResultSMS(_ref6, subJoinText) {\n  var firstName = _ref6.firstName,\n      brand = _ref6.brand,\n      accountId = _ref6.accountId,\n      mobileNumber = _ref6.mobileNumber;\n\n  if (verify(mobileNumber)) {\n    var apiInstance = new SibApiV3Sdk.TransactionalSMSApi();\n    var sendTransacSms = new SibApiV3Sdk.SendTransacSms();\n    sendTransacSms.sender = 'EWB';\n    sendTransacSms.recipient = mobileNumber;\n    sendTransacSms.content = \"Hi \".concat(firstName, \". Your \").concat(brand, \" application for \").concat(accountId, \" has been \").concat(subJoinText, \". Thanks, EWB.\");\n    sendTransacSms.type = 'transactional';\n    sendTransacSms.tag = 'application';\n    apiInstance.sendTransacSms(sendTransacSms).then(function () {\n      return {\n        success: true,\n        msg: 'SMS sent'\n      };\n    })[\"catch\"](function (err) {\n      return err;\n    });\n  } else return;\n} // send confirmation of application linked\n\n\nfunction sendApplicationLinked(_ref7) {\n  var firstName = _ref7.firstName,\n      brand = _ref7.brand,\n      accountId = _ref7.accountId,\n      email = _ref7.email;\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email,\n    name: firstName\n  }];\n  sendSmtpEmail.replyTo = {\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.templateId = 6;\n  sendSmtpEmail.tags = ['application'];\n  sendSmtpEmail.params = {\n    FNAME: firstName,\n    ACCOUNTID: accountId,\n    BRAND: brand\n  };\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send bonus start\n\n\nfunction sendBonusStart(_ref8, email, firstName) {\n  var status = _ref8.status,\n      value = _ref8.value,\n      accountId = _ref8.accountId,\n      brand = _ref8.brand;\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  var currency = brand === 'ecoPayz' ? 'â‚¬' : '$';\n  var bonusValue = currency + value;\n  var transRequirement = brand === 'Skrill' ? '$3,500' : brand === 'ecoPayz' ? 'â‚¬5,000' : '$2,000';\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email,\n    name: firstName\n  }];\n  sendSmtpEmail.replyTo = {\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.templateId = 7;\n  sendSmtpEmail.tags = ['bonus'];\n  sendSmtpEmail.params = {\n    FNAME: firstName,\n    ACCOUNTID: accountId,\n    BRAND: brand,\n    STATUS: status,\n    VALUE: bonusValue,\n    REQUIREMENT: transRequirement\n  };\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send bonus start for neteller 1% bonus\n\n\nfunction sendPercentBonusStart(_ref9, email, firstName) {\n  var status = _ref9.status,\n      accountId = _ref9.accountId,\n      brand = _ref9.brand,\n      startDate = _ref9.startDate,\n      endDate = _ref9.endDate;\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  var start = moment(startDate).format('DD/MM/YYYY');\n  var end = moment(endDate).format('DD/MM/YYYY');\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email,\n    name: firstName\n  }];\n  sendSmtpEmail.replyTo = {\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.templateId = 8;\n  sendSmtpEmail.tags = ['bonus'];\n  sendSmtpEmail.params = {\n    FNAME: firstName,\n    ACCOUNTID: accountId,\n    BRAND: brand,\n    STATUS: status,\n    START: start,\n    END: end\n  };\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send confirmation bonus paid\n\n\nfunction sendBonusPayment(_ref10, _ref11) {\n  var value = _ref10.value,\n      brand = _ref10.brand,\n      accountId = _ref10.accountId;\n  var firstName = _ref11.firstName,\n      email = _ref11.email;\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  var currency = brand === 'ecoPayz' ? 'â‚¬' : '$';\n  var bonusValue = currency + value.toFixed(2);\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email,\n    name: firstName\n  }];\n  sendSmtpEmail.replyTo = {\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.templateId = 10;\n  sendSmtpEmail.tags = ['bonus'];\n  sendSmtpEmail.params = {\n    FNAME: firstName,\n    ACCOUNTID: accountId,\n    BRAND: brand,\n    VALUE: bonusValue\n  };\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send contact form submitted\n\n\nfunction sendMessage(_ref12, date) {\n  var name = _ref12.name,\n      email = _ref12.email,\n      message = _ref12.message;\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email,\n    name: name\n  }, {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  }];\n  sendSmtpEmail.replyTo = {\n    email: email\n  };\n  sendSmtpEmail.templateId = 11;\n  sendSmtpEmail.tags = ['support'];\n  sendSmtpEmail.params = {\n    FNAME: name,\n    DATE: date,\n    MESSAGE: message,\n    EMAIL: email\n  };\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send token for password reset\n\n\nfunction forgotPassSubmit(firstName, url, email) {\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email,\n    name: firstName\n  }];\n  sendSmtpEmail.replyTo = {\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.templateId = 12;\n  sendSmtpEmail.tags = ['support'];\n  sendSmtpEmail.params = {\n    FNAME: firstName,\n    URL: url\n  };\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send final monthly stats\n\n\nfunction sendFinalMonthlyStats(report) {\n  User.findById(report.belongsToUser, {\n    password: 0\n  }).then(function (user) {\n    var firstName = user.firstName,\n        email = user.email;\n    var brand = report.brand,\n        monthId = report.monthId,\n        periodId = report.periodId;\n    var currency = report.brand === 'ecoPayz' ? 'â‚¬' : '$';\n    var accountId = report.account.accountId;\n    var transfers = accounting.formatMoney(report.account.transValue, currency, 2);\n    var cashback = accounting.formatMoney(report.account.cashback, currency, 2);\n    var rate = report.account.cashbackRate === \"NaN%\" ? '0%' : report.account.cashbackRate;\n    var apiInstance = new SibApiV3Sdk.SMTPApi();\n    var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    sendSmtpEmail.sender = {\n      name: 'eWalletBooster',\n      email: 'support@ewalletbooster.com'\n    };\n    sendSmtpEmail.to = [{\n      email: email,\n      name: firstName\n    }];\n    sendSmtpEmail.replyTo = {\n      email: 'support@ewalletbooster.com'\n    };\n    sendSmtpEmail.templateId = 13;\n    sendSmtpEmail.tags = ['stats'];\n    sendSmtpEmail.params = {\n      FNAME: firstName,\n      MONTH: monthId,\n      PERIOD: periodId,\n      ACCOUNTID: accountId,\n      BRAND: brand,\n      TRANSFERS: transfers,\n      CASHBACK: cashback,\n      RATE: rate\n    };\n    apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n      return {\n        success: true,\n        msg: 'Email sent'\n      };\n    })[\"catch\"](function (err) {\n      return err;\n    });\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send final monthly stats via sms\n\n\nfunction sendFinalMonthlyStatsSMS(report) {\n  User.findById(report.belongsToUser, {\n    password: 0\n  }).then(function (user) {\n    var firstName = user.firstName,\n        mobileNumber = user.mobileNumber;\n    var monthId = report.monthId,\n        brand = report.brand;\n    var currency = report.brand === 'ecoPayz' ? 'â‚¬' : '$';\n    var accountId = report.account.accountId;\n    var cashback = accounting.formatMoney(report.account.cashback, currency, 2);\n    var rate = report.account.cashbackRate === \"NaN%\" ? '0%' : report.account.cashbackRate;\n\n    if (verify(mobileNumber) && cashback !== '0%') {\n      var apiInstance = new SibApiV3Sdk.TransactionalSMSApi();\n      var sendTransacSms = new SibApiV3Sdk.SendTransacSms();\n      sendTransacSms.sender = 'EWB';\n      sendTransacSms.recipient = mobileNumber;\n      sendTransacSms.content = \"Hi \".concat(firstName, \". Your cashback for \").concat(monthId, \" has been confirmed for \").concat(brand, \" account \").concat(accountId, \". You earned \").concat(cashback, \" cashback and your average rate was \").concat(rate, \". Please login to request payment. Thanks, EWB.\");\n      sendTransacSms.type = 'transactional';\n      sendTransacSms.tag = 'stats';\n      apiInstance.sendTransacSms(sendTransacSms).then(function () {\n        return {\n          success: true,\n          msg: 'SMS sent'\n        };\n      })[\"catch\"](function (err) {\n        return err;\n      });\n    } else return;\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send weekly stats on a friday\n\n\nfunction sendMonthStatsOnFriday(report) {\n  User.findById(report.belongsToUser, {\n    password: 0\n  }).then(function (user) {\n    var firstName = user.firstName,\n        email = user.email;\n    var brand = report.brand,\n        monthId = report.monthId,\n        periodId = report.periodId;\n    var currency = report.brand === 'ecoPayz' ? 'â‚¬' : '$';\n    var accountId = report.account.accountId;\n    var transfers = accounting.formatMoney(report.account.transValue, currency, 2);\n    var cashback = accounting.formatMoney(report.account.cashback, currency, 2);\n    var rate = report.account.cashbackRate === \"NaN%\" ? '0%' : report.account.cashbackRate;\n    var apiInstance = new SibApiV3Sdk.SMTPApi();\n    var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    sendSmtpEmail.sender = {\n      name: 'eWalletBooster',\n      email: 'support@ewalletbooster.com'\n    };\n    sendSmtpEmail.to = [{\n      email: email,\n      name: firstName\n    }];\n    sendSmtpEmail.replyTo = {\n      email: 'support@ewalletbooster.com'\n    };\n    sendSmtpEmail.templateId = 14;\n    sendSmtpEmail.tags = ['stats'];\n    sendSmtpEmail.params = {\n      FNAME: firstName,\n      MONTH: monthId,\n      PERIOD: startOfMonthToYesterday(),\n      ACCOUNTID: accountId,\n      BRAND: brand,\n      TRANSFERS: transfers,\n      CASHBACK: cashback,\n      RATE: rate\n    };\n    apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n      return {\n        success: true,\n        msg: 'Email sent'\n      };\n    })[\"catch\"](function (err) {\n      return err;\n    });\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send weekly stats on a friday via sms\n\n\nfunction sendMonthStatsOnFridaySMS(report) {\n  User.findById(report.belongsToUser, {\n    password: 0\n  }).then(function (user) {\n    var firstName = user.firstName,\n        mobileNumber = user.mobileNumber;\n    var monthId = report.monthId,\n        brand = report.brand;\n    var currency = report.brand === 'ecoPayz' ? 'â‚¬' : '$';\n    var accountId = report.account.accountId;\n    var cashback = accounting.formatMoney(report.account.cashback, currency, 2);\n    var rate = report.account.cashbackRate === \"NaN%\" ? '0%' : report.account.cashbackRate;\n\n    if (verify(mobileNumber) && cashback !== '0%') {\n      var apiInstance = new SibApiV3Sdk.TransactionalSMSApi();\n      var sendTransacSms = new SibApiV3Sdk.SendTransacSms();\n      sendTransacSms.sender = 'EWB';\n      sendTransacSms.recipient = mobileNumber;\n      sendTransacSms.content = \"Hi \".concat(firstName, \". You've earned \").concat(cashback, \" cashback in \").concat(monthId, \" for \").concat(brand, \" account \").concat(accountId, \" and your average rate is \").concat(rate, \". Wishing you a happy & profitable weekend ahead! Thanks, EWB.\");\n      sendTransacSms.type = 'transactional';\n      sendTransacSms.tag = 'stats';\n      apiInstance.sendTransacSms(sendTransacSms).then(function () {\n        return {\n          success: true,\n          msg: 'SMS sent'\n        };\n      })[\"catch\"](function (err) {\n        return err;\n      });\n    } else return;\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send confirmation payment has been processed\n\n\nfunction sendPayoutConfirm(report, user) {\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  var brand = report.brand,\n      monthId = report.monthId;\n  var _report$account = report.account,\n      accountId = _report$account.accountId,\n      cashback = _report$account.cashback;\n  var firstName = user.firstName,\n      email = user.email;\n  var currency = brand === 'ecoPayz' ? 'â‚¬' : '$';\n  cashback = accounting.formatMoney(cashback, currency, 2);\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email,\n    name: firstName\n  }];\n  sendSmtpEmail.replyTo = {\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.templateId = 15;\n  sendSmtpEmail.tags = ['payments'];\n  sendSmtpEmail.params = {\n    FNAME: firstName,\n    MONTH: monthId,\n    ACCOUNTID: accountId,\n    CASHBACK: cashback\n  };\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send payment request when user requests    \n\n\nfunction sendPaymentRequest(_ref13, firstName, email, brand) {\n  var accountId = _ref13.accountId,\n      cashback = _ref13.cashback,\n      month = _ref13.month;\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  var currency = brand === 'ecoPayz' ? 'â‚¬' : '$';\n  cashback = accounting.formatMoney(cashback, currency, 2);\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email,\n    name: firstName\n  }];\n  sendSmtpEmail.replyTo = {\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.templateId = 16;\n  sendSmtpEmail.tags = ['payments'];\n  sendSmtpEmail.params = {\n    FNAME: firstName,\n    MONTH: month,\n    ACCOUNTID: accountId,\n    CASHBACK: cashback\n  };\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // contacts\n// create new contact\n\n\nfunction createNewContact(_ref14) {\n  var email = _ref14.email,\n      firstName = _ref14.firstName,\n      lastName = _ref14.lastName,\n      mobileNumber = _ref14.mobileNumber;\n  var apiInstance = new SibApiV3Sdk.ContactsApi();\n  var createContact = new SibApiV3Sdk.CreateContact();\n  createContact.email = email;\n  createContact.attributes = {\n    FIRSTNAME: firstName,\n    LASTNAME: lastName,\n    PHONENUMBER: mobileNumber\n  };\n  createContact.listIds = [3];\n  apiInstance.createContact(createContact).then(function () {\n    return {\n      success: true,\n      msg: 'User added'\n    };\n  })[\"catch\"](function () {\n    // if contact already exists - update it\n    var updateContact = new SibApiV3Sdk.UpdateContact();\n    updateContact.attributes = {\n      FIRSTNAME: firstName,\n      LASTNAME: lastName,\n      PHONENUMBER: mobileNumber\n    };\n    updateContact.listIds = [3];\n    updateContact.unlinkListIds = [8];\n    apiInstance.updateContact(email, updateContact).then(function () {\n      return {\n        success: true,\n        msg: 'User updated'\n      };\n    })[\"catch\"](function (e) {\n      return e;\n    });\n  });\n} // function getContactInfo (email) {\n//     const apiInstance = new SibApiV3Sdk.ContactsApi();\n//     apiInstance.getContactInfo(email)\n//     .then((res) => {\n//         if (res) {\n//             return true;\n//         }\n//     })\n//     .catch(() => {\n//         return false;\n//     })\n// }\n// function deleteContact (email) {\n//     const apiInstance = new SibApiV3Sdk.ContactsApi();\n//     apiInstance.deleteContact(email)\n//     .then(() => {\n//         return ({ success: true, msg: 'Contact deleted' });   \n//     })\n//     .catch(err => {\n//         return err;\n//     })\n// }\n// adding new partner to partner list\n\n\nfunction addPartnerToList(_ref15) {\n  var email = _ref15.email;\n  // adding existing user to different list\n  var apiInstance = new SibApiV3Sdk.ContactsApi();\n  var listId = 5;\n  var contactEmails = new SibApiV3Sdk.AddContactToList();\n  contactEmails.emails = [email];\n  apiInstance.addContactToList(listId, contactEmails).then(function () {\n    return {\n      success: true,\n      msg: 'Partner added'\n    };\n  })[\"catch\"](function (e) {\n    return e;\n  });\n}\n\nfunction addLightSignUpToList(email) {\n  var apiInstance = new SibApiV3Sdk.ContactsApi();\n  var createContact = new SibApiV3Sdk.CreateContact();\n  createContact.email = email;\n  createContact.listIds = [8];\n  apiInstance.createContact(createContact).then(function () {\n    sendLightSignUpEmail(email);\n    return {\n      success: true,\n      msg: 'User added'\n    };\n  })[\"catch\"](function (e) {\n    return e;\n  });\n}\n\nfunction sendLightSignUpEmail(email) {\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email\n  }];\n  sendSmtpEmail.replyTo = {\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.templateId = 33;\n  sendSmtpEmail.tags = ['join'];\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (e) {\n    return e;\n  });\n} // subpartner volume triggered \n\n\nfunction sendSubPartnerActivation(email) {\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email\n  }];\n  sendSmtpEmail.replyTo = {\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.templateId = 36;\n  sendSmtpEmail.tags = ['join'];\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (e) {\n    return e;\n  });\n} // official partner volume triggered \n\n\nfunction sendOfficialPartnerActivation(email) {\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email\n  }];\n  sendSmtpEmail.replyTo = {\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.templateId = 37;\n  sendSmtpEmail.tags = ['join'];\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (e) {\n    return e;\n  });\n} // create new partner\n// partners / affiliates\n// created new partner\n\n\nfunction sendNewPartner(partner) {\n  User.findById(partner.belongsTo, {\n    password: 0\n  }).populate({\n    path: 'partner'\n  }).then(function (user) {\n    var firstName = user.firstName,\n        email = user.email;\n    var apiInstance = new SibApiV3Sdk.SMTPApi();\n    var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    sendSmtpEmail.sender = {\n      name: 'eWalletBooster',\n      email: 'support@ewalletbooster.com'\n    };\n    sendSmtpEmail.to = [{\n      email: email,\n      name: firstName\n    }];\n    sendSmtpEmail.replyTo = {\n      email: 'support@ewalletbooster.com'\n    };\n    sendSmtpEmail.templateId = 18;\n    sendSmtpEmail.tags = ['partner'];\n    sendSmtpEmail.params = {\n      FNAME: firstName\n    };\n    apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n      return {\n        success: true,\n        msg: 'Email sent'\n      };\n    })[\"catch\"](function (err) {\n      return err;\n    });\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // partner updated payment method\n\n\nfunction sendUpdatedPaymentMethod(partner) {\n  User.findById(partner.belongsTo, {\n    password: 0\n  }).populate({\n    path: 'partner'\n  }).then(function (user) {\n    var firstName = user.firstName,\n        email = user.email;\n    var apiInstance = new SibApiV3Sdk.SMTPApi();\n    var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    sendSmtpEmail.sender = {\n      name: 'eWalletBooster',\n      email: 'support@ewalletbooster.com'\n    };\n    sendSmtpEmail.to = [{\n      email: email,\n      name: firstName\n    }];\n    sendSmtpEmail.replyTo = {\n      email: 'support@ewalletbooster.com'\n    };\n    sendSmtpEmail.templateId = 19;\n    sendSmtpEmail.tags = ['partner'];\n    sendSmtpEmail.params = {\n      FNAME: firstName\n    };\n    apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n      return {\n        success: true,\n        msg: 'Email sent'\n      };\n    })[\"catch\"](function (err) {\n      return err;\n    });\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // submit aff application\n\n\nfunction sendAffApplicationSubmit(accountId, belongsTo, brand) {\n  AffPartner.findById(belongsTo).then(function (partner) {\n    User.findById(partner.belongsTo, {\n      password: 0\n    }).populate({\n      path: 'partner'\n    }).then(function (user) {\n      var firstName = user.firstName,\n          email = user.email;\n      var apiInstance = new SibApiV3Sdk.SMTPApi();\n      var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n      sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n      };\n      sendSmtpEmail.to = [{\n        email: email,\n        name: firstName\n      }];\n      sendSmtpEmail.replyTo = {\n        email: 'support@ewalletbooster.com'\n      };\n      sendSmtpEmail.templateId = 20;\n      sendSmtpEmail.tags = ['partner'];\n      sendSmtpEmail.params = {\n        FNAME: firstName,\n        ACCOUNTID: accountId,\n        BRAND: brand\n      };\n      apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n        return {\n          success: true,\n          msg: 'Email sent'\n        };\n      })[\"catch\"](function (err) {\n        return err;\n      });\n    })[\"catch\"](function (err) {\n      return err;\n    });\n  });\n} // submit vip upgrade request\n\n\nfunction sendVIPRequestSubmit(accountId, belongsTo, brand) {\n  AffPartner.findById(belongsTo).then(function (partner) {\n    User.findById(partner.belongsTo, {\n      password: 0\n    }).populate({\n      path: 'partner'\n    }).then(function (user) {\n      var firstName = user.firstName,\n          email = user.email;\n      var apiInstance = new SibApiV3Sdk.SMTPApi();\n      var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n      sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n      };\n      sendSmtpEmail.to = [{\n        email: email,\n        name: firstName\n      }];\n      sendSmtpEmail.replyTo = {\n        email: 'support@ewalletbooster.com'\n      };\n      sendSmtpEmail.templateId = 21;\n      sendSmtpEmail.tags = ['partner'];\n      sendSmtpEmail.params = {\n        FNAME: firstName,\n        ACCOUNTID: accountId,\n        BRAND: brand\n      };\n      apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n        return {\n          success: true,\n          msg: 'Email sent'\n        };\n      })[\"catch\"](function (err) {\n        return err;\n      });\n    })[\"catch\"](function (err) {\n      return err;\n    });\n  });\n} // submit payment request\n\n\nfunction sendAffPaymentRequest(_id, amount, currency) {\n  AffPartner.findById(_id).then(function (partner) {\n    User.findById(partner.belongsTo, {\n      password: 0\n    }).populate({\n      path: 'partner'\n    }).then(function (user) {\n      var firstName = user.firstName,\n          email = user.email;\n      amount = amount.toFixed(2);\n      var apiInstance = new SibApiV3Sdk.SMTPApi();\n      var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n      sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n      };\n      sendSmtpEmail.to = [{\n        email: email,\n        name: firstName\n      }];\n      sendSmtpEmail.replyTo = {\n        email: 'support@ewalletbooster.com'\n      };\n      sendSmtpEmail.templateId = 23;\n      sendSmtpEmail.tags = ['partner'];\n      sendSmtpEmail.params = {\n        FNAME: firstName,\n        AMOUNT: amount,\n        CURRENCY: currency\n      };\n      apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n        return {\n          success: true,\n          msg: 'Email sent'\n        };\n      })[\"catch\"](function (e) {\n        return e;\n      });\n    })[\"catch\"](function (e) {\n      return e;\n    });\n  });\n} // notify of account found from /affiliate-daily\n\n\nfunction sendAffAccountAdded(_id, accountId, brand) {\n  AffPartner.findById(_id).then(function (partner) {\n    User.findById(partner.belongsTo, {\n      password: 0\n    }).populate({\n      path: 'partner'\n    }).then(function (user) {\n      var firstName = user.firstName,\n          email = user.email;\n      var apiInstance = new SibApiV3Sdk.SMTPApi();\n      var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n      sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n      };\n      sendSmtpEmail.to = [{\n        email: email,\n        name: firstName\n      }];\n      sendSmtpEmail.replyTo = {\n        email: 'support@ewalletbooster.com'\n      };\n      sendSmtpEmail.templateId = 22;\n      sendSmtpEmail.tags = ['partner'];\n      sendSmtpEmail.params = {\n        FNAME: firstName,\n        ACCOUNTID: accountId,\n        BRAND: brand\n      };\n      apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n        return {\n          success: true,\n          msg: 'Email sent'\n        };\n      })[\"catch\"](function (err) {\n        return err;\n      });\n    })[\"catch\"](function (err) {\n      return err;\n    });\n  });\n} // send aff application result\n\n\nfunction sendAffApplicationResult(_ref16, action, reason) {\n  var belongsTo = _ref16.belongsTo,\n      accountId = _ref16.accountId,\n      brand = _ref16.brand;\n  AffPartner.findById(belongsTo).then(function (partner) {\n    User.findById(partner.belongsTo, {\n      password: 0\n    }).populate({\n      path: 'partner'\n    }).then(function (user) {\n      var firstName = user.firstName,\n          email = user.email;\n      var apiInstance = new SibApiV3Sdk.SMTPApi();\n      var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n      sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n      };\n      sendSmtpEmail.to = [{\n        email: email,\n        name: firstName\n      }];\n      var template = action === 'upgraded' ? 24 : action === 'approved' ? 25 : 26;\n      sendSmtpEmail.replyTo = {\n        email: 'support@ewalletbooster.com'\n      };\n      sendSmtpEmail.templateId = template;\n      sendSmtpEmail.tags = ['partner'];\n      sendSmtpEmail.params = {\n        FNAME: firstName,\n        ACCOUNTID: accountId,\n        BRAND: brand,\n        REASON: reason\n      };\n      apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n        return {\n          success: true,\n          msg: 'Email sent'\n        };\n      })[\"catch\"](function (err) {\n        return err;\n      });\n    })[\"catch\"](function (err) {\n      return err;\n    });\n  });\n} // send payment confirmed \n\n\nfunction sendPaymentSent(_id, amount) {\n  AffPartner.findById(_id).then(function (partner) {\n    User.findById(partner.belongsTo, {\n      password: 0\n    }).populate({\n      path: 'partner'\n    }).then(function (user) {\n      var firstName = user.firstName,\n          email = user.email;\n      var _user$partner = user.partner,\n          paymentEmail = _user$partner.paymentEmail,\n          paymentBrand = _user$partner.paymentBrand;\n      amount = amount.toFixed(2);\n      var apiInstance = new SibApiV3Sdk.SMTPApi();\n      var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n      sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n      };\n      sendSmtpEmail.to = [{\n        email: email,\n        name: firstName\n      }];\n      sendSmtpEmail.replyTo = {\n        email: 'support@ewalletbooster.com'\n      };\n      sendSmtpEmail.templateId = 27;\n      sendSmtpEmail.tags = ['partner'];\n      sendSmtpEmail.params = {\n        FNAME: firstName,\n        AMOUNT: amount,\n        PAYMENTBRAND: paymentBrand,\n        PAYMENTEMAIL: paymentEmail\n      };\n      apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n        return {\n          success: true,\n          msg: 'Email sent'\n        };\n      })[\"catch\"](function (err) {\n        return err;\n      });\n    })[\"catch\"](function (err) {\n      return err;\n    });\n  });\n} // send partner account disabled \n\n\nfunction sendPartnerDisabled(_id) {\n  User.findById(_id, {\n    password: 0\n  }).then(function (user) {\n    var firstName = user.firstName,\n        email = user.email;\n    var apiInstance = new SibApiV3Sdk.SMTPApi();\n    var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    sendSmtpEmail.sender = {\n      name: 'eWalletBooster',\n      email: 'support@ewalletbooster.com'\n    };\n    sendSmtpEmail.to = [{\n      email: email,\n      name: firstName\n    }];\n    sendSmtpEmail.replyTo = {\n      email: 'support@ewalletbooster.com'\n    };\n    sendSmtpEmail.templateId = 29;\n    sendSmtpEmail.tags = ['partner'];\n    sendSmtpEmail.params = {\n      FNAME: firstName\n    };\n    apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n      return {\n        success: true,\n        msg: 'Email sent'\n      };\n    })[\"catch\"](function (err) {\n      return err;\n    });\n  })[\"catch\"](function (err) {\n    return err;\n  });\n} // send ecoPayz request link\n\n\nfunction sendRequestEcoLink(firstName, email) {\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email\n  }, {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  }];\n  sendSmtpEmail.replyTo = {\n    email: email\n  };\n  sendSmtpEmail.templateId = 44;\n  sendSmtpEmail.tags = ['partner'];\n  sendSmtpEmail.params = {\n    FNAME: firstName\n  };\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (e) {\n    return e;\n  });\n}\n\nfunction sendConfirmedEcoLink(email) {\n  var apiInstance = new SibApiV3Sdk.SMTPApi();\n  var sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n  sendSmtpEmail.sender = {\n    name: 'eWalletBooster',\n    email: 'support@ewalletbooster.com'\n  };\n  sendSmtpEmail.to = [{\n    email: email\n  }];\n  sendSmtpEmail.replyTo = {\n    email: email\n  };\n  sendSmtpEmail.templateId = 45;\n  sendSmtpEmail.tags = ['partner'];\n  apiInstance.sendTransacEmail(sendSmtpEmail).then(function () {\n    return {\n      success: true,\n      msg: 'Email sent'\n    };\n  })[\"catch\"](function (e) {\n    return e;\n  });\n}\n\nmodule.exports = {\n  sendApplicationSubmit: sendApplicationSubmit,\n  sendApplicationSubmitSMS: sendApplicationSubmitSMS,\n  sendApplicationResult: sendApplicationResult,\n  sendApplicationResultSMS: sendApplicationResultSMS,\n  sendApplicationLinked: sendApplicationLinked,\n  sendBonusStart: sendBonusStart,\n  sendPercentBonusStart: sendPercentBonusStart,\n  sendBonusPayment: sendBonusPayment,\n  sendMessage: sendMessage,\n  forgotPassSubmit: forgotPassSubmit,\n  sendFinalMonthlyStats: sendFinalMonthlyStats,\n  sendFinalMonthlyStatsSMS: sendFinalMonthlyStatsSMS,\n  sendMonthStatsOnFriday: sendMonthStatsOnFriday,\n  sendMonthStatsOnFridaySMS: sendMonthStatsOnFridaySMS,\n  sendPayoutConfirm: sendPayoutConfirm,\n  sendPaymentRequest: sendPaymentRequest,\n  sendWelcomeEmail: sendWelcomeEmail,\n  createNewContact: createNewContact,\n  sendNewPartner: sendNewPartner,\n  sendUpdatedPaymentMethod: sendUpdatedPaymentMethod,\n  sendAffApplicationSubmit: sendAffApplicationSubmit,\n  sendVIPRequestSubmit: sendVIPRequestSubmit,\n  sendAffPaymentRequest: sendAffPaymentRequest,\n  sendAffAccountAdded: sendAffAccountAdded,\n  sendAffApplicationResult: sendAffApplicationResult,\n  sendPaymentSent: sendPaymentSent,\n  addPartnerToList: addPartnerToList,\n  sendPartnerDisabled: sendPartnerDisabled,\n  addLightSignUpToList: addLightSignUpToList,\n  sendOfficialPartnerActivation: sendOfficialPartnerActivation,\n  sendSubPartnerActivation: sendSubPartnerActivation,\n  sendRequestEcoLink: sendRequestEcoLink,\n  sendConfirmedEcoLink: sendConfirmedEcoLink\n}; // sendPayoutConfirm({\n//     \"_id\": {\n//         \"$oid\": \"5cf4e283a9a7df0004743a02\"\n//     },\n//     \"account\": {\n//         \"accountId\": \"452623321637\",\n//         \"deposits\": 0,\n//         \"transValue\": 9123.69,\n//         \"commission\": 27.37,\n//         \"cashback\": 21.49,\n//         \"cashbackRate\": \"0.24%\"\n//     },\n//     \"timestamp\": {\n//         \"$date\": \"2019-06-03T02:22:08.495Z\"\n//     },\n//     \"monthId\": \"June 2019\",\n//     \"periodId\": \"2019/06/01 - 2019/06/30\",\n//     \"brand\": \"Neteller\",\n//     \"status\": \"Pending\",\n//     \"lastUpdate\": \"July 1st 2019, 5:48:03 pm\",\n//     \"__v\": 0,\n//     \"belongsTo\": {\n//         \"$oid\": \"5be40dd24bc2800004028c99\"\n//     },\n//     \"belongsToUser\": \"5bcdcde930f3d20004cf440e\",\n//     \"paymentEmail\": \"paulmckenna191986@hotmail.co.uk\"\n// },{ isDeleted: false,\n//     _id: '5bcdcde930f3d20004cf440e',\n//     mobileNumber: '+447895008966',\n//     firstName: 'Paul',\n//     lastName: 'McKenna',\n//     email: 'mckennapaul27@gmail.com',\n//     SMS: true,\n//     __v: 0,\n//     resetPasswordExpires: null,\n//     resetPasswordToken: null })\n// sendPaymentRequest(\n//     {\n//         \"_id\": \"5c03ba44f9cbd10004e97f35\",\n//         \"status\": \"Requested\",\n//         \"month\": \"November 2018\",\n//         \"accountId\": \"457325584335\",\n//         \"belongsTo\": \"5be4102a2a2c160004409f18\",\n//         \"cashback\": 139.94,\n//         \"__v\": 0\n//     },\n//     'Paul',\n//     'mckennapaul27@gmail.com',\n//     'Neteller'\n// )\n// sendApplicationResultSMS({firstName: 'Paul', brand: 'Neteller', accountId: '450012345432', mobileNumber: '+447895008966'}, 'approved and upgraded to VIP')\n// sendApplicationResult(\"5d1a0ad2e1e1d47c300b5789\", 'approved and upgraded to VIP')\n// createApplicationLink ('5d135a27e78d6432ca2dd9e5')\n// createNewContact(\n//     { isDeleted: false,\n//     _id: '5bcdcde930f3d20004cf440e',\n//     mobileNumber: '+447895008366',\n//     firstName: 'Paul',\n//     lastName: 'McKenna',\n//     email: 'mckennapaul22227@gmail.com',\n//     SMS: true,\n//     __v: 0,\n//     resetPasswordExpires: null,\n//     resetPasswordToken: null }\n// )","map":{"version":3,"sources":["/Users/user1/Documents/development/greenscapes/greenscapes-domestic/utils/sib.helpers.js"],"names":["path","require","config","join","__dirname","SibApiV3Sdk","defaultClient","ApiClient","instance","apiKey","authentications","process","env","SNDBLAPIKEY","partnerKey","PARTNERSNDBLAPIKEY","verify","phoneNumber","clientCheck","phoneNumbers","fetch","then","sendWelcomeEmail","firstName","email","apiInstance","SMTPApi","sendSmtpEmail","SendSmtpEmail","sender","name","to","replyTo","templateId","tags","params","FNAME","sendTransacEmail","success","msg","err","sendApplicationSubmit","brand","accountId","accountEmailAddress","accountCurrency","typeOfAccount","EMAIL","ACCOUNTID","BRAND","CURRENCY","STATUS","TYPE","sendApplicationSubmitSMS","mobileNumber","TransactionalSMSApi","sendTransacSms","SendTransacSms","recipient","content","type","tag","sendApplicationResult","_id","subJoinText","template","Application","findById","a","vipStatus","getVipRequestText","belongsTo","SUBJOINTEXT","VIPUPGRADETEXT","application","Promise","all","crypto","randomBytes","buffer","token","toString","findByIdAndUpdate","applicationToken","applicationExpires","Date","now","upsert","ID","sendApplicationResultSMS","sendApplicationLinked","sendBonusStart","status","value","currency","bonusValue","transRequirement","VALUE","REQUIREMENT","sendPercentBonusStart","startDate","endDate","start","moment","format","end","START","END","sendBonusPayment","toFixed","sendMessage","date","message","DATE","MESSAGE","forgotPassSubmit","url","URL","sendFinalMonthlyStats","report","User","belongsToUser","password","user","monthId","periodId","account","transfers","accounting","formatMoney","transValue","cashback","rate","cashbackRate","MONTH","PERIOD","TRANSFERS","CASHBACK","RATE","sendFinalMonthlyStatsSMS","sendMonthStatsOnFriday","startOfMonthToYesterday","sendMonthStatsOnFridaySMS","sendPayoutConfirm","sendPaymentRequest","month","createNewContact","lastName","ContactsApi","createContact","CreateContact","attributes","FIRSTNAME","LASTNAME","PHONENUMBER","listIds","updateContact","UpdateContact","unlinkListIds","e","addPartnerToList","listId","contactEmails","AddContactToList","emails","addContactToList","addLightSignUpToList","sendLightSignUpEmail","sendSubPartnerActivation","sendOfficialPartnerActivation","sendNewPartner","partner","populate","sendUpdatedPaymentMethod","sendAffApplicationSubmit","AffPartner","sendVIPRequestSubmit","sendAffPaymentRequest","amount","AMOUNT","sendAffAccountAdded","sendAffApplicationResult","action","reason","REASON","sendPaymentSent","paymentEmail","paymentBrand","PAYMENTBRAND","PAYMENTEMAIL","sendPartnerDisabled","sendRequestEcoLink","sendConfirmedEcoLink","module","exports"],"mappings":"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","sourcesContent":["const path = require('path');\nrequire('dotenv').config({path: path.join(__dirname, '../.env')});\n\n// const accountSid = process.env.TWILIO_ACCOUNT_SID;\n// const authToken = process.env.TWILIO_AUTH_TOKEN;\n// const twilio = require('twilio');\n// const clientCheck = twilio(accountSid, authToken).lookups.v1;\n\nconst SibApiV3Sdk = require('sib-api-v3-sdk');\nconst defaultClient = SibApiV3Sdk.ApiClient.instance;\n\n// const { getVipRequestText } = require('../utils/api.helpers')\n// const { Application, User } = require('../models/index');\n// const { AffPartner } = require('../models/affiliates/index')\n\n// const crypto = require('crypto');\n// const moment = require('moment');\n// const accounting = require('accounting'); \n// const startOfMonthToYesterday = () => moment().startOf('month').add(12, 'hours').format('DD/MM/YYYY') + ' - ' + moment().subtract(1, 'days').format('DD/MM/YYYY');\n// Configure API key authorization: api-key\nlet apiKey = defaultClient.authentications['api-key'];\napiKey.apiKey = process.env.SNDBLAPIKEY;\n\n// Configure API key authorization: partner-key\nlet partnerKey = defaultClient.authentications['partner-key'];\npartnerKey.apiKey = process.env.PARTNERSNDBLAPIKEY;\n\n\n// function to verify mobile number is correct\nfunction verify(phoneNumber) {\n    return clientCheck.phoneNumbers(phoneNumber).fetch()\n    .then(() => {\n        return true;\n    })\n    .catch(() => {\n        return false;\n    })\n}\n\n// send welcome email\nfunction sendWelcomeEmail ({firstName, email}) {\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail() \n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [{\n        email: email, \n        name: firstName\n    }];\n    sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n    sendSmtpEmail.templateId = 17;\n    sendSmtpEmail.tags = ['join'];\n    sendSmtpEmail.params = {\n        FNAME: firstName\n    }\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => {\n        return ({success: true, msg: 'Email sent'});       \n    })\n    .catch(err => {\n        return err;\n    })\n}\n// send application submitted email regardless of whether belongsTo 'Account' as based on req.body data\nfunction sendApplicationSubmit ({ firstName, email, brand, accountId, accountEmailAddress, accountCurrency, typeOfAccount }) {\n\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail() \n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [{\n        email: email, \n        name: firstName\n    }];\n    sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n    sendSmtpEmail.templateId = 1;\n    sendSmtpEmail.tags = ['application'];\n    sendSmtpEmail.params = {\n        FNAME: firstName,\n        EMAIL: accountEmailAddress,\n        ACCOUNTID: accountId,\n        BRAND: brand,\n        CURRENCY: accountCurrency,\n        STATUS: 'Pending',\n        TYPE: typeOfAccount\n    }\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => {\n        return ({success: true, msg: 'Email sent'});       \n    })\n    .catch(err => {\n        return err;\n    })\n}\n// send application submitted SMS regardless of whether belongsTo 'Account' as based on req.body data\nfunction sendApplicationSubmitSMS ({ firstName, brand, accountId, mobileNumber }) {\n\n    if (verify(mobileNumber)) {\n\n        const apiInstance = new SibApiV3Sdk.TransactionalSMSApi();\n        let sendTransacSms = new SibApiV3Sdk.SendTransacSms();\n\n        sendTransacSms.sender = 'EWB';\n        sendTransacSms.recipient = mobileNumber;\n        sendTransacSms.content = `Hi ${firstName}. We have received your ${brand} application for ${accountId}. You will receive a response soon. Thanks, EWB.`;\n        sendTransacSms.type = 'transactional';\n        sendTransacSms.tag = 'application';\n\n        apiInstance.sendTransacSms(sendTransacSms)\n        .then(() => {\n            return ({success: true, msg: 'SMS sent'});       \n        })\n        .catch(err => {\n            return err;\n        })\n    } else return;\n}\n// send application result regardless of belongsTo using different templateId's\nfunction sendApplicationResult ( _id, subJoinText ) {\n\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    const template = {\n        'approved': 2,\n        'approved and upgraded to VIP': 2,\n        'declined': 3,\n        'approved for cashback': 28,\n        'approved for cashback and upgraded to VIP': 28\n    }\n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n    sendSmtpEmail.tags = ['application'];\n\n    Application.findById(_id)\n    .then(a => {\n        const vipStatus = getVipRequestText(subJoinText);\n        sendSmtpEmail.to = [{\n            email: a.accountEmailAddress,\n            name: a.firstName\n        }];\n        if (a.belongsTo) {\n            sendSmtpEmail.templateId = template[subJoinText];\n            sendSmtpEmail.params = {\n                FNAME: a.firstName,\n                EMAIL: a.accountEmailAddress,\n                ACCOUNTID: a.accountId,\n                BRAND: a.brand,\n                CURRENCY: a.accountCurrency,\n                SUBJOINTEXT: subJoinText,\n                VIPUPGRADETEXT: vipStatus\n            }\n            apiInstance.sendTransacEmail(sendSmtpEmail)\n            .then(() => {\n                return ({success: true, msg: 'Email sent'});       \n            })\n            .catch(err => {\n                return err;\n            })\n        } else {\n            Application.findById(a._id)\n            .then(application => {\n                Promise.all([application, crypto.randomBytes(20)])\n                .then(([application, buffer]) => {\n                    const token = buffer.toString('hex');\n                    Application.findByIdAndUpdate(application._id, \n                        {applicationToken: token, applicationExpires: Date.now() + 86400000},\n                        {upsert: true, new: true}\n                    )\n                    .then(() => {\n                        sendSmtpEmail.templateId = subJoinText === 'declined' ? 3 : 4;\n                        sendSmtpEmail.params = {\n                            FNAME: a.firstName,\n                            EMAIL: a.accountEmailAddress,\n                            ACCOUNTID: a.accountId,\n                            BRAND: a.brand,\n                            CURRENCY: a.accountCurrency,\n                            SUBJOINTEXT: subJoinText,\n                            VIPUPGRADETEXT: vipStatus,\n                            ID: token\n                        }\n                        apiInstance.sendTransacEmail(sendSmtpEmail)\n                        .then(() => {\n                            return ({success: true, msg: 'Email sent'});       \n                        })\n                        .catch(err => {\n                            return err;\n                        })\n                    })\n                    .catch(err => {\n                        return err;\n                    })\n                })\n                .catch(err => {\n                    return err;\n                })\n            })\n            .catch(err => {\n                return err;\n            })\n        }\n    })\n    .catch(err => {\n        return err;\n    })\n}\n// send application result sms text\nfunction sendApplicationResultSMS ({ firstName, brand, accountId, mobileNumber }, subJoinText) {\n\n    if (verify(mobileNumber)) {\n\n        const apiInstance = new SibApiV3Sdk.TransactionalSMSApi();\n        let sendTransacSms = new SibApiV3Sdk.SendTransacSms();\n\n        sendTransacSms.sender = 'EWB';\n        sendTransacSms.recipient = mobileNumber;\n        sendTransacSms.content = `Hi ${firstName}. Your ${brand} application for ${accountId} has been ${subJoinText}. Thanks, EWB.`;\n        sendTransacSms.type = 'transactional';\n        sendTransacSms.tag = 'application';\n\n        apiInstance.sendTransacSms(sendTransacSms)\n        .then(() => {\n            return ({success: true, msg: 'SMS sent'});       \n        })\n        .catch(err => {\n            return err;\n        })\n    } else return;\n}\n// send confirmation of application linked\nfunction sendApplicationLinked ({ firstName, brand, accountId, email }) {\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail() \n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [{\n        email: email, \n        name: firstName\n    }];\n    sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n    sendSmtpEmail.templateId = 6;\n    sendSmtpEmail.tags = ['application'];\n    sendSmtpEmail.params = {\n        FNAME: firstName,\n        ACCOUNTID: accountId,\n        BRAND: brand\n    }\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => {\n        return ({success: true, msg: 'Email sent'});       \n    })\n    .catch(err => {\n        return err;\n    })\n}\n// send bonus start\nfunction sendBonusStart({status, value, accountId, brand}, email, firstName) {\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    const currency = brand === 'ecoPayz' ? 'â‚¬' : '$';\n    const bonusValue = currency + value; \n    const transRequirement = brand === 'Skrill' ? '$3,500' : brand === 'ecoPayz' ? 'â‚¬5,000' : '$2,000';\n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [{\n        email: email, \n        name: firstName\n    }];\n    sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n    sendSmtpEmail.templateId = 7;\n    sendSmtpEmail.tags = ['bonus'];\n    sendSmtpEmail.params = {\n        FNAME: firstName,\n        ACCOUNTID: accountId,\n        BRAND: brand,\n        STATUS: status,\n        VALUE: bonusValue,\n        REQUIREMENT: transRequirement\n    }\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => {\n        return ({success: true, msg: 'Email sent'});       \n    })\n    .catch(err => {\n        return err;\n    })\n}\n// send bonus start for neteller 1% bonus\nfunction sendPercentBonusStart ({status, accountId, brand, startDate, endDate}, email, firstName) {\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    const start = moment(startDate).format('DD/MM/YYYY');\n    const end = moment(endDate).format('DD/MM/YYYY');\n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [{\n        email: email, \n        name: firstName\n    }];\n    sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n    sendSmtpEmail.templateId = 8;\n    sendSmtpEmail.tags = ['bonus'];\n    sendSmtpEmail.params = {\n        FNAME: firstName,\n        ACCOUNTID: accountId,\n        BRAND: brand,\n        STATUS: status,\n        START: start,\n        END: end\n    }\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => {\n        return ({success: true, msg: 'Email sent'});       \n    })\n    .catch(err => {\n        return err;\n    })\n}\n// send confirmation bonus paid\nfunction sendBonusPayment({value, brand, accountId}, {firstName, email}) {\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    const currency = brand === 'ecoPayz' ? 'â‚¬' : '$';\n    const bonusValue = currency + (value.toFixed(2)); \n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [{\n        email: email, \n        name: firstName\n    }];\n    sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n    sendSmtpEmail.templateId = 10;\n    sendSmtpEmail.tags = ['bonus'];\n    sendSmtpEmail.params = {\n        FNAME: firstName,\n        ACCOUNTID: accountId,\n        BRAND: brand,\n        VALUE: bonusValue\n    }\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => {\n        return ({success: true, msg: 'Email sent'});       \n    })\n    .catch(err => {\n        return err;\n    })\n}\n// send contact form submitted\nfunction sendMessage({name, email, message}, date) {\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    \n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [{email: email, name: name}, {name: 'eWalletBooster', email: 'support@ewalletbooster.com'}];\n    sendSmtpEmail.replyTo = {email: email};\n    sendSmtpEmail.templateId = 11;\n    sendSmtpEmail.tags = ['support'];\n    sendSmtpEmail.params = {\n        FNAME: name,\n        DATE: date,\n        MESSAGE: message,\n        EMAIL: email\n    }\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => {\n        return ({success: true, msg: 'Email sent'});       \n    })\n    .catch(err => {\n        return err;\n    })\n}\n// send token for password reset\nfunction forgotPassSubmit(firstName, url, email) {\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [{\n        email: email, \n        name: firstName\n    }];\n    sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n    sendSmtpEmail.templateId = 12;\n    sendSmtpEmail.tags = ['support'];\n    sendSmtpEmail.params = {\n        FNAME: firstName,\n        URL: url\n    }\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => {\n        return ({success: true, msg: 'Email sent'});       \n    })\n    .catch(err => {\n        return err;\n    })\n}\n// send final monthly stats\nfunction sendFinalMonthlyStats (report) {\n    User.findById(report.belongsToUser, {password: 0})\n    .then(user => {\n        const {\n            firstName,\n            email\n        } = user;\n        const {\n            brand,\n            monthId,\n            periodId\n        } = report;\n        const currency = report.brand === 'ecoPayz' ? 'â‚¬' : '$';\n        const accountId = report.account.accountId;\n        const transfers = accounting.formatMoney(report.account.transValue, currency, 2);     \n        const cashback = accounting.formatMoney(report.account.cashback, currency, 2);\n        const rate = report.account.cashbackRate === \"NaN%\" ? '0%' : report.account.cashbackRate;\n        \n        const apiInstance = new SibApiV3Sdk.SMTPApi();\n        let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n\n        sendSmtpEmail.sender = {\n            name: 'eWalletBooster',\n            email: 'support@ewalletbooster.com'\n        }\n        sendSmtpEmail.to = [{\n            email: email, \n            name: firstName\n        }];\n        sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n        sendSmtpEmail.templateId = 13;\n        sendSmtpEmail.tags = ['stats'];\n        sendSmtpEmail.params = {\n            FNAME: firstName,\n            MONTH: monthId,\n            PERIOD: periodId,\n            ACCOUNTID: accountId,\n            BRAND: brand,\n            TRANSFERS: transfers,\n            CASHBACK: cashback,\n            RATE: rate\n        }\n        apiInstance.sendTransacEmail(sendSmtpEmail)\n        .then(() => {\n            return ({success: true, msg: 'Email sent'});       \n        })\n        .catch(err => {\n            return err;\n        })\n    })\n    .catch(err => {\n        return err;\n    });   \n}\n// send final monthly stats via sms\nfunction sendFinalMonthlyStatsSMS (report) {\n    User.findById(report.belongsToUser, {password: 0})\n    .then(user => {\n        const {\n            firstName,\n            mobileNumber\n        } = user;\n        const {\n            monthId,\n            brand\n        } = report;\n\n        const currency = report.brand === 'ecoPayz' ? 'â‚¬' : '$';\n        const accountId = report.account.accountId;\n        const cashback = accounting.formatMoney(report.account.cashback, currency, 2);\n        const rate = report.account.cashbackRate === \"NaN%\" ? '0%' : report.account.cashbackRate;\n\n        if (verify(mobileNumber) && cashback !== '0%') {\n\n            const apiInstance = new SibApiV3Sdk.TransactionalSMSApi();\n            let sendTransacSms = new SibApiV3Sdk.SendTransacSms();\n\n            sendTransacSms.sender = 'EWB';\n            sendTransacSms.recipient = mobileNumber;\n            sendTransacSms.content = `Hi ${firstName}. Your cashback for ${monthId} has been confirmed for ${brand} account ${accountId}. You earned ${cashback} cashback and your average rate was ${rate}. Please login to request payment. Thanks, EWB.`;\n            sendTransacSms.type = 'transactional';\n            sendTransacSms.tag = 'stats';\n\n            apiInstance.sendTransacSms(sendTransacSms)\n            .then(() => {\n                return ({success: true, msg: 'SMS sent'});       \n            })\n            .catch(err => {\n                return err;\n            })\n        } else return;\n    })\n    .catch(err => {\n        return err;\n    });\n}\n// send weekly stats on a friday\nfunction sendMonthStatsOnFriday (report) {\n    User.findById(report.belongsToUser, {password: 0})\n    .then(user => {\n        const {\n            firstName,\n            email\n        } = user;\n        const {\n            brand,\n            monthId,\n            periodId\n        } = report;\n        const currency = report.brand === 'ecoPayz' ? 'â‚¬' : '$';\n        const accountId = report.account.accountId;\n        const transfers = accounting.formatMoney(report.account.transValue, currency, 2);     \n        const cashback = accounting.formatMoney(report.account.cashback, currency, 2);\n        const rate = report.account.cashbackRate === \"NaN%\" ? '0%' : report.account.cashbackRate;\n        \n        const apiInstance = new SibApiV3Sdk.SMTPApi();\n        let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n\n        sendSmtpEmail.sender = {\n            name: 'eWalletBooster',\n            email: 'support@ewalletbooster.com'\n        }\n        sendSmtpEmail.to = [{\n            email: email, \n            name: firstName\n        }];\n        sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n        sendSmtpEmail.templateId = 14;\n        sendSmtpEmail.tags = ['stats'];\n        sendSmtpEmail.params = {\n            FNAME: firstName,\n            MONTH: monthId,\n            PERIOD: startOfMonthToYesterday(),\n            ACCOUNTID: accountId,\n            BRAND: brand,\n            TRANSFERS: transfers,\n            CASHBACK: cashback,\n            RATE: rate\n        }\n        apiInstance.sendTransacEmail(sendSmtpEmail)\n        .then(() => {\n            return ({success: true, msg: 'Email sent'});       \n        })\n        .catch(err => {\n            return err;\n        })\n    })\n    .catch(err => {\n        return err;\n    });   \n}\n// send weekly stats on a friday via sms\nfunction sendMonthStatsOnFridaySMS (report) {\n    User.findById(report.belongsToUser, {password: 0})\n    .then(user => {\n        const {\n            firstName,\n            mobileNumber\n        } = user;\n        const {\n            monthId,\n            brand\n        } = report;\n\n        const currency = report.brand === 'ecoPayz' ? 'â‚¬' : '$';\n        const accountId = report.account.accountId;\n        const cashback = accounting.formatMoney(report.account.cashback, currency, 2);\n        const rate = report.account.cashbackRate === \"NaN%\" ? '0%' : report.account.cashbackRate;\n\n        if (verify(mobileNumber) && cashback !== '0%') {\n\n            const apiInstance = new SibApiV3Sdk.TransactionalSMSApi();\n            let sendTransacSms = new SibApiV3Sdk.SendTransacSms();\n\n            sendTransacSms.sender = 'EWB';\n            sendTransacSms.recipient = mobileNumber;\n            sendTransacSms.content = `Hi ${firstName}. You've earned ${cashback} cashback in ${monthId} for ${brand} account ${accountId} and your average rate is ${rate}. Wishing you a happy & profitable weekend ahead! Thanks, EWB.`;\n            sendTransacSms.type = 'transactional';\n            sendTransacSms.tag = 'stats';\n\n            apiInstance.sendTransacSms(sendTransacSms)\n            .then(() => {\n                return ({success: true, msg: 'SMS sent'});       \n            })\n            .catch(err => {\n                return err;\n            })\n        } else return;\n    })\n    .catch(err => {\n        return err;\n    });\n}\n// send confirmation payment has been processed\nfunction sendPayoutConfirm (report, user) {\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    const {\n        brand,\n        monthId\n    } = report;\n    let {\n        accountId,\n        cashback\n    } = report.account;\n    const {\n        firstName,\n        email\n    } = user;\n\n    const currency = brand === 'ecoPayz' ? 'â‚¬' : '$';\n    cashback = accounting.formatMoney(cashback, currency, 2);\n\n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [{\n        email: email, \n        name: firstName\n    }];\n    sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n    sendSmtpEmail.templateId = 15;\n    sendSmtpEmail.tags = ['payments'];\n    sendSmtpEmail.params = {\n        FNAME: firstName,\n        MONTH: monthId,\n        ACCOUNTID: accountId,\n        CASHBACK: cashback\n    }\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => {\n        return ({success: true, msg: 'Email sent'});       \n    })\n    .catch(err => {\n        return err;\n    })\n}\n// send payment request when user requests    \nfunction sendPaymentRequest({accountId, cashback, month}, firstName, email, brand) {\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n\n    const currency = brand === 'ecoPayz' ? 'â‚¬' : '$';          \n    cashback = accounting.formatMoney(cashback, currency, 2);  \n\n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [{\n        email: email, \n        name: firstName\n    }];\n    sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n    sendSmtpEmail.templateId = 16;\n    sendSmtpEmail.tags = ['payments'];\n    sendSmtpEmail.params = {\n        FNAME: firstName,\n        MONTH: month,\n        ACCOUNTID: accountId,\n        CASHBACK: cashback\n    }\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => {\n        return ({success: true, msg: 'Email sent'});       \n    })\n    .catch(err => {\n        return err;\n    })\n}\n// contacts\n\n// create new contact\nfunction createNewContact ({ email, firstName, lastName, mobileNumber }) {\n    const apiInstance = new SibApiV3Sdk.ContactsApi();\n    let createContact = new SibApiV3Sdk.CreateContact();\n    createContact.email = email;\n    createContact.attributes = {\n        FIRSTNAME: firstName,\n        LASTNAME: lastName,\n        PHONENUMBER: mobileNumber\n    }\n    createContact.listIds = [3];\n    apiInstance.createContact(createContact)\n    .then(() => {\n        return ({ success: true, msg: 'User added' });   \n    })\n    .catch(() => {\n        // if contact already exists - update it\n        let updateContact = new SibApiV3Sdk.UpdateContact();\n        updateContact.attributes = {\n            FIRSTNAME: firstName,\n            LASTNAME: lastName,\n            PHONENUMBER: mobileNumber\n        }\n        updateContact.listIds = [3];\n        updateContact.unlinkListIds = [8];\n        apiInstance.updateContact(email, updateContact)\n        .then(() => {\n            return ({ success: true, msg: 'User updated' });   \n        })\n        .catch(e => e)\n    })\n}\n\n// function getContactInfo (email) {\n//     const apiInstance = new SibApiV3Sdk.ContactsApi();\n//     apiInstance.getContactInfo(email)\n//     .then((res) => {\n//         if (res) {\n//             return true;\n//         }\n//     })\n//     .catch(() => {\n//         return false;\n//     })\n// }\n\n// function deleteContact (email) {\n//     const apiInstance = new SibApiV3Sdk.ContactsApi();\n//     apiInstance.deleteContact(email)\n//     .then(() => {\n//         return ({ success: true, msg: 'Contact deleted' });   \n//     })\n//     .catch(err => {\n//         return err;\n//     })\n// }\n\n// adding new partner to partner list\nfunction addPartnerToList ({ email }) {\n    // adding existing user to different list\n    const apiInstance = new SibApiV3Sdk.ContactsApi();\n    const listId = 5;\n    let contactEmails = new SibApiV3Sdk.AddContactToList();\n    contactEmails.emails = [email]\n    apiInstance.addContactToList(listId, contactEmails)\n    .then(() => {\n        return ({success: true, msg: 'Partner added'});   \n    })\n    .catch(e => e)\n}\n\nfunction addLightSignUpToList (email) {\n    const apiInstance = new SibApiV3Sdk.ContactsApi();\n    let createContact = new SibApiV3Sdk.CreateContact();\n    createContact.email = email;\n    createContact.listIds = [8]\n    apiInstance.createContact(createContact)\n    .then(() => {\n        sendLightSignUpEmail(email)\n        return ({ success: true, msg: 'User added' });   \n    })\n    .catch(e => e)\n}\n\nfunction sendLightSignUpEmail (email) {\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail() \n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [{\n        email: email\n    }];\n    sendSmtpEmail.replyTo = { email: 'support@ewalletbooster.com' };\n    sendSmtpEmail.templateId = 33;\n    sendSmtpEmail.tags = ['join'];\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => {\n        return ({ success: true, msg: 'Email sent' });       \n    })\n    .catch(e => e)\n}\n\n// subpartner volume triggered \nfunction sendSubPartnerActivation (email) {\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail() \n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [{\n        email: email\n    }];\n    sendSmtpEmail.replyTo = { email: 'support@ewalletbooster.com' };\n    sendSmtpEmail.templateId = 36;\n    sendSmtpEmail.tags = ['join'];\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => {\n        return ({ success: true, msg: 'Email sent' });       \n    })\n    .catch(e => e)\n}\n\n// official partner volume triggered \nfunction sendOfficialPartnerActivation (email) {\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail() \n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [{\n        email: email\n    }];\n    sendSmtpEmail.replyTo = { email: 'support@ewalletbooster.com' };\n    sendSmtpEmail.templateId = 37;\n    sendSmtpEmail.tags = ['join'];\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => {\n        return ({ success: true, msg: 'Email sent' });       \n    })\n    .catch(e => e)\n}\n\n// create new partner\n\n// partners / affiliates\n\n// created new partner\nfunction sendNewPartner (partner) {\n    User.findById(partner.belongsTo, {password: 0}).populate({ path: 'partner' })\n    .then(user => {\n        const { firstName, email } = user;\n\n        const apiInstance = new SibApiV3Sdk.SMTPApi();\n        let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n\n        sendSmtpEmail.sender = {\n            name: 'eWalletBooster',\n            email: 'support@ewalletbooster.com'\n        };\n        sendSmtpEmail.to = [{\n            email: email, \n            name: firstName\n        }];\n        sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n        sendSmtpEmail.templateId = 18;\n        sendSmtpEmail.tags = ['partner'];\n        sendSmtpEmail.params = {\n            FNAME: firstName,\n        }\n        apiInstance.sendTransacEmail(sendSmtpEmail)\n        .then(() => {\n            return ({success: true, msg: 'Email sent'});       \n        })\n        .catch(err => {\n            return err;\n        })\n    })\n    .catch(err => {\n        return err;\n    }); \n}\n\n// partner updated payment method\nfunction sendUpdatedPaymentMethod (partner) {\n    User.findById(partner.belongsTo, {password: 0}).populate({ path: 'partner' })\n    .then(user => {\n        const { firstName, email } = user;\n\n        const apiInstance = new SibApiV3Sdk.SMTPApi();\n        let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n\n        sendSmtpEmail.sender = {\n            name: 'eWalletBooster',\n            email: 'support@ewalletbooster.com'\n        };\n        sendSmtpEmail.to = [{\n            email: email, \n            name: firstName\n        }];\n        sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n        sendSmtpEmail.templateId = 19;\n        sendSmtpEmail.tags = ['partner'];\n        sendSmtpEmail.params = {\n            FNAME: firstName,\n        }\n        apiInstance.sendTransacEmail(sendSmtpEmail)\n        .then(() => {\n            return ({success: true, msg: 'Email sent'});       \n        })\n        .catch(err => {\n            return err;\n        })\n    })\n    .catch(err => {\n        return err;\n    }); \n}\n\n// submit aff application\nfunction sendAffApplicationSubmit (accountId, belongsTo, brand) {\n    AffPartner.findById(belongsTo)\n    .then(partner => {\n        User.findById(partner.belongsTo, {password: 0}).populate({ path: 'partner' })\n        .then(user => {\n            const { firstName, email } = user;\n\n            const apiInstance = new SibApiV3Sdk.SMTPApi();\n            let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n\n            sendSmtpEmail.sender = {\n                name: 'eWalletBooster',\n                email: 'support@ewalletbooster.com'\n            };\n            sendSmtpEmail.to = [{\n                email: email, \n                name: firstName\n            }];\n            sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n            sendSmtpEmail.templateId = 20;\n            sendSmtpEmail.tags = ['partner'];\n            sendSmtpEmail.params = {\n                FNAME: firstName,\n                ACCOUNTID: accountId,\n                BRAND: brand\n            }\n            apiInstance.sendTransacEmail(sendSmtpEmail)\n            .then(() => {\n                return ({success: true, msg: 'Email sent'});       \n            })\n            .catch(err => {\n                return err;\n            })\n        })\n        .catch(err => {\n            return err;\n        }); \n    })\n}\n\n// submit vip upgrade request\nfunction sendVIPRequestSubmit (accountId, belongsTo, brand) {\n    AffPartner.findById(belongsTo)\n    .then(partner => {\n        User.findById(partner.belongsTo, {password: 0}).populate({ path: 'partner' })\n        .then(user => {\n            const { firstName, email } = user;\n\n            const apiInstance = new SibApiV3Sdk.SMTPApi();\n            let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n\n            sendSmtpEmail.sender = {\n                name: 'eWalletBooster',\n                email: 'support@ewalletbooster.com'\n            };\n            sendSmtpEmail.to = [{\n                email: email, \n                name: firstName\n            }];\n            sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n            sendSmtpEmail.templateId = 21;\n            sendSmtpEmail.tags = ['partner'];\n            sendSmtpEmail.params = {\n                FNAME: firstName,\n                ACCOUNTID: accountId,\n                BRAND: brand\n            }\n            apiInstance.sendTransacEmail(sendSmtpEmail)\n            .then(() => {\n                return ({success: true, msg: 'Email sent'});       \n            })\n            .catch(err => {\n                return err;\n            })\n        })\n        .catch(err => {\n            return err;\n        }); \n    })\n}\n\n// submit payment request\nfunction sendAffPaymentRequest (_id, amount, currency) {\n    AffPartner.findById(_id)\n    .then(partner => {\n        User.findById(partner.belongsTo, { password: 0 }).populate({ path: 'partner' })\n        .then(user => {\n            const { firstName, email } = user;\n            amount = amount.toFixed(2);\n            const apiInstance = new SibApiV3Sdk.SMTPApi();\n            let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n\n            sendSmtpEmail.sender = {\n                name: 'eWalletBooster',\n                email: 'support@ewalletbooster.com'\n            };\n            sendSmtpEmail.to = [{\n                email: email, \n                name: firstName\n            }];\n            sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n            sendSmtpEmail.templateId = 23;\n            sendSmtpEmail.tags = ['partner'];\n            sendSmtpEmail.params = {\n                FNAME: firstName,\n                AMOUNT: amount,\n                CURRENCY: currency\n            }\n            apiInstance.sendTransacEmail(sendSmtpEmail)\n            .then(() => ({ success: true, msg: 'Email sent' })) \n            .catch(e => e)\n        }).catch(e => e)\n    })\n}\n\n// notify of account found from /affiliate-daily\nfunction sendAffAccountAdded(_id, accountId, brand) {\n    AffPartner.findById(_id)\n    .then(partner => {\n        User.findById(partner.belongsTo, {password: 0}).populate({ path: 'partner' })\n        .then(user => {\n            const { firstName, email } = user;\n            const apiInstance = new SibApiV3Sdk.SMTPApi();\n            let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n\n            sendSmtpEmail.sender = {\n                name: 'eWalletBooster',\n                email: 'support@ewalletbooster.com'\n            };\n            sendSmtpEmail.to = [{\n                email: email, \n                name: firstName\n            }];\n            sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n            sendSmtpEmail.templateId = 22;\n            sendSmtpEmail.tags = ['partner'];\n            sendSmtpEmail.params = {\n                FNAME: firstName,\n                ACCOUNTID: accountId,\n                BRAND: brand\n            }\n            apiInstance.sendTransacEmail(sendSmtpEmail)\n            .then(() => {\n                return ({success: true, msg: 'Email sent'});       \n            })\n            .catch(err => {\n                return err;\n            })\n        })\n        .catch(err => {\n            return err;\n        }); \n    })\n}\n\n// send aff application result\nfunction sendAffApplicationResult ({ belongsTo, accountId, brand }, action, reason) {\n    AffPartner.findById(belongsTo)\n    .then(partner => {\n        User.findById(partner.belongsTo, {password: 0}).populate({ path: 'partner' })\n        .then(user => {\n            const { firstName, email } = user;\n            const apiInstance = new SibApiV3Sdk.SMTPApi();\n            let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n\n            sendSmtpEmail.sender = {\n                name: 'eWalletBooster',\n                email: 'support@ewalletbooster.com'\n            };\n            sendSmtpEmail.to = [{\n                email: email, \n                name: firstName\n            }];\n\n            const template = action === 'upgraded' ? 24 : action === 'approved' ? 25 : 26;\n            \n            sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n            sendSmtpEmail.templateId = template;\n            sendSmtpEmail.tags = ['partner'];\n            sendSmtpEmail.params = {\n                FNAME: firstName,\n                ACCOUNTID: accountId,\n                BRAND: brand,\n                REASON: reason\n            }\n            apiInstance.sendTransacEmail(sendSmtpEmail)\n            .then(() => {\n                return ({success: true, msg: 'Email sent'});       \n            })\n            .catch(err => {\n                return err;\n            })\n        })\n        .catch(err => {\n            return err;\n        }); \n    })\n}\n\n// send payment confirmed \nfunction sendPaymentSent(_id, amount) {\n    AffPartner.findById(_id)\n    .then(partner => {\n        User.findById(partner.belongsTo, {password: 0}).populate({ path: 'partner' })\n        .then(user => {\n            const { firstName, email } = user;\n            const { paymentEmail, paymentBrand } = user.partner;\n            amount = amount.toFixed(2);\n            const apiInstance = new SibApiV3Sdk.SMTPApi();\n            let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n\n            sendSmtpEmail.sender = {\n                name: 'eWalletBooster',\n                email: 'support@ewalletbooster.com'\n            };\n            sendSmtpEmail.to = [{\n                email: email, \n                name: firstName\n            }];\n            sendSmtpEmail.replyTo = {email: 'support@ewalletbooster.com'};\n            sendSmtpEmail.templateId = 27;\n            sendSmtpEmail.tags = ['partner'];\n            sendSmtpEmail.params = {\n                FNAME: firstName,\n                AMOUNT: amount,\n                PAYMENTBRAND: paymentBrand,\n                PAYMENTEMAIL: paymentEmail\n            }\n            apiInstance.sendTransacEmail(sendSmtpEmail)\n            .then(() => {\n                return ({success: true, msg: 'Email sent'});       \n            })\n            .catch(err => {\n                return err;\n            })\n        })\n        .catch(err => {\n            return err;\n        }); \n    })\n}\n\n// send partner account disabled \nfunction sendPartnerDisabled (_id) {\n    User.findById(_id, { password: 0 })\n    .then(user => {\n        const { firstName, email } = user;\n        \n        const apiInstance = new SibApiV3Sdk.SMTPApi();\n        let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n\n        sendSmtpEmail.sender = {\n            name: 'eWalletBooster',\n            email: 'support@ewalletbooster.com'\n        };\n        sendSmtpEmail.to = [{\n            email: email, \n            name: firstName\n        }];\n        sendSmtpEmail.replyTo = { email: 'support@ewalletbooster.com' };\n        sendSmtpEmail.templateId = 29;\n        sendSmtpEmail.tags = ['partner'];\n        sendSmtpEmail.params = {\n            FNAME: firstName\n        }\n        apiInstance.sendTransacEmail(sendSmtpEmail)\n        .then(() => {\n            return ({success: true, msg: 'Email sent'});       \n        })\n        .catch(err => {\n            return err;\n        })\n    })\n    .catch(err => {\n        return err;\n    }); \n}\n\n// send ecoPayz request link\nfunction sendRequestEcoLink ( firstName, email ) {\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    \n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [\n        { email: email }, \n        { name: 'eWalletBooster', email: 'support@ewalletbooster.com' }\n    ];\n    sendSmtpEmail.replyTo = { email };\n    sendSmtpEmail.templateId = 44;\n    sendSmtpEmail.tags = ['partner'];\n    sendSmtpEmail.params = {\n        FNAME: firstName\n    }\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => ({ success: true, msg: 'Email sent' })) \n    .catch(e => e)\n}\n\nfunction sendConfirmedEcoLink (email) {\n    const apiInstance = new SibApiV3Sdk.SMTPApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    \n    sendSmtpEmail.sender = {\n        name: 'eWalletBooster',\n        email: 'support@ewalletbooster.com'\n    }\n    sendSmtpEmail.to = [\n        { email: email }\n    ];\n    sendSmtpEmail.replyTo = { email };\n    sendSmtpEmail.templateId = 45;\n    sendSmtpEmail.tags = ['partner'];\n    apiInstance.sendTransacEmail(sendSmtpEmail)\n    .then(() => ({ success: true, msg: 'Email sent' })) \n    .catch(e => e)\n}\n\nmodule.exports = {\n    sendApplicationSubmit,\n    sendApplicationSubmitSMS,\n    sendApplicationResult,\n    sendApplicationResultSMS,\n    sendApplicationLinked,\n    sendBonusStart,\n    sendPercentBonusStart,\n    sendBonusPayment,\n    sendMessage,\n    forgotPassSubmit,\n    sendFinalMonthlyStats,\n    sendFinalMonthlyStatsSMS,\n    sendMonthStatsOnFriday,\n    sendMonthStatsOnFridaySMS,\n    sendPayoutConfirm,\n    sendPaymentRequest,\n    sendWelcomeEmail,\n    createNewContact,\n    sendNewPartner,\n    sendUpdatedPaymentMethod,\n    sendAffApplicationSubmit,\n    sendVIPRequestSubmit,\n    sendAffPaymentRequest,\n    sendAffAccountAdded,\n    sendAffApplicationResult,\n    sendPaymentSent,\n    addPartnerToList,\n    sendPartnerDisabled,\n    addLightSignUpToList,\n    sendOfficialPartnerActivation,\n    sendSubPartnerActivation,\n    sendRequestEcoLink,\n    sendConfirmedEcoLink \n}\n\n// sendPayoutConfirm({\n//     \"_id\": {\n//         \"$oid\": \"5cf4e283a9a7df0004743a02\"\n//     },\n//     \"account\": {\n//         \"accountId\": \"452623321637\",\n//         \"deposits\": 0,\n//         \"transValue\": 9123.69,\n//         \"commission\": 27.37,\n//         \"cashback\": 21.49,\n//         \"cashbackRate\": \"0.24%\"\n//     },\n//     \"timestamp\": {\n//         \"$date\": \"2019-06-03T02:22:08.495Z\"\n//     },\n//     \"monthId\": \"June 2019\",\n//     \"periodId\": \"2019/06/01 - 2019/06/30\",\n//     \"brand\": \"Neteller\",\n//     \"status\": \"Pending\",\n//     \"lastUpdate\": \"July 1st 2019, 5:48:03 pm\",\n//     \"__v\": 0,\n//     \"belongsTo\": {\n//         \"$oid\": \"5be40dd24bc2800004028c99\"\n//     },\n//     \"belongsToUser\": \"5bcdcde930f3d20004cf440e\",\n//     \"paymentEmail\": \"paulmckenna191986@hotmail.co.uk\"\n// },{ isDeleted: false,\n//     _id: '5bcdcde930f3d20004cf440e',\n//     mobileNumber: '+447895008966',\n//     firstName: 'Paul',\n//     lastName: 'McKenna',\n//     email: 'mckennapaul27@gmail.com',\n//     SMS: true,\n//     __v: 0,\n//     resetPasswordExpires: null,\n//     resetPasswordToken: null })\n\n// sendPaymentRequest(\n//     {\n//         \"_id\": \"5c03ba44f9cbd10004e97f35\",\n//         \"status\": \"Requested\",\n//         \"month\": \"November 2018\",\n//         \"accountId\": \"457325584335\",\n//         \"belongsTo\": \"5be4102a2a2c160004409f18\",\n//         \"cashback\": 139.94,\n//         \"__v\": 0\n//     },\n//     'Paul',\n//     'mckennapaul27@gmail.com',\n//     'Neteller'\n// )\n// sendApplicationResultSMS({firstName: 'Paul', brand: 'Neteller', accountId: '450012345432', mobileNumber: '+447895008966'}, 'approved and upgraded to VIP')\n// sendApplicationResult(\"5d1a0ad2e1e1d47c300b5789\", 'approved and upgraded to VIP')\n// createApplicationLink ('5d135a27e78d6432ca2dd9e5')\n// createNewContact(\n//     { isDeleted: false,\n//     _id: '5bcdcde930f3d20004cf440e',\n//     mobileNumber: '+447895008366',\n//     firstName: 'Paul',\n//     lastName: 'McKenna',\n//     email: 'mckennapaul22227@gmail.com',\n//     SMS: true,\n//     __v: 0,\n//     resetPasswordExpires: null,\n//     resetPasswordToken: null }\n// )\n\n\n\n"]},"metadata":{},"sourceType":"script"}