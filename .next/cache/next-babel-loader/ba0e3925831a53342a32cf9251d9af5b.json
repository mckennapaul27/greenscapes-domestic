{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\n// const path = require('path');\n// require('dotenv').config({path: path.join(__dirname, '../.env')});\nvar SibApiV3Sdk = require('sib-api-v3-sdk'); // console.log(SibApiV3Sdk.ApiClient.instance)\n\n\nvar defaultClient = SibApiV3Sdk.ApiClient.instance; // const moment = require('moment');\n// Configure API key authorization: api-key\n\nvar apiKey = defaultClient.authentications['api-key'];\napiKey.apiKey = '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'; // // // Configure API key authorization: partner-key\n// let partnerKey = defaultClient.authentications['partner-key'];\n// partnerKey.apiKey = process.env.SIBKEY;\n// // send contact form submitted\n\nfunction sendContactForm(name, email, subject, phone, message) {\n  var apiInstance, sendSmtpEmail, res;\n  return _regeneratorRuntime.async(function sendContactForm$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          apiInstance = new SibApiV3Sdk.TransactionalEmailsApi();\n          sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n          console.log('called');\n          sendSmtpEmail.sender = {\n            name: 'Greenscapes Gardening Sevices',\n            email: 'simon@greenscapes-gardening.co.uk'\n          };\n          sendSmtpEmail.to = [{\n            email: email,\n            name: name\n          }];\n          sendSmtpEmail.bcc = [{\n            email: 'simon@greenscapes-gardening.co.uk'\n          }];\n          sendSmtpEmail.replyTo = {\n            email: email\n          };\n          sendSmtpEmail.templateId = 1;\n          sendSmtpEmail.tags = ['support'];\n          sendSmtpEmail.params = {\n            FIRSTNAME: name,\n            MESSAGE: message,\n            PHONE: phone,\n            EMAIL: email\n          };\n          _context.prev = 10;\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(apiInstance.sendTransacEmail(sendSmtpEmail));\n\n        case 13:\n          res = _context.sent;\n          console.log(res);\n          Promise.resolve(res);\n          _context.next = 22;\n          break;\n\n        case 18:\n          _context.prev = 18;\n          _context.t0 = _context[\"catch\"](10);\n          console.log(_context.t0);\n          Promise.reject(_context.t0);\n\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[10, 18]], Promise);\n} // create new contact\n\n\nfunction createNewContact(name, email, subject, phone, message) {\n  var apiInstance = new SibApiV3Sdk.ContactsApi();\n  var createContact = new SibApiV3Sdk.CreateContact();\n  createContact.email = email;\n  createContact.attributes = {\n    FIRSTNAME: name,\n    PHONENUMBER: phone\n  };\n  createContact.listIds = [3];\n  apiInstance.createContact(createContact).then(function (res) {\n    console.log(res);\n    return {\n      success: true,\n      msg: 'User added'\n    };\n  })[\"catch\"](function (e) {\n    return console.log(e);\n  });\n}\n\nmodule.exports = {\n  sendContactForm: sendContactForm,\n  createNewContact: createNewContact\n};","map":{"version":3,"sources":["/Users/user1/Documents/development/greenscapes/greenscapes-domestic/utils/sib.helpers.js"],"names":["SibApiV3Sdk","require","defaultClient","ApiClient","instance","apiKey","authentications","sendContactForm","name","email","subject","phone","message","apiInstance","TransactionalEmailsApi","sendSmtpEmail","SendSmtpEmail","console","log","sender","to","bcc","replyTo","templateId","tags","params","FIRSTNAME","MESSAGE","PHONE","EMAIL","sendTransacEmail","res","Promise","resolve","reject","createNewContact","ContactsApi","createContact","CreateContact","attributes","PHONENUMBER","listIds","then","success","msg","e","module","exports"],"mappings":"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","sourcesContent":["// const path = require('path');\n// require('dotenv').config({path: path.join(__dirname, '../.env')});\n\nconst SibApiV3Sdk = require('sib-api-v3-sdk');\n// console.log(SibApiV3Sdk.ApiClient.instance)\nconst defaultClient = SibApiV3Sdk.ApiClient.instance;\n\n// const moment = require('moment');\n\n// Configure API key authorization: api-key\nlet apiKey = defaultClient.authentications['api-key'];\napiKey.apiKey = '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'\n\n// // // Configure API key authorization: partner-key\n// let partnerKey = defaultClient.authentications['partner-key'];\n// partnerKey.apiKey = process.env.SIBKEY;\n\n// // send contact form submitted\nasync function sendContactForm (name, email, subject, phone, message) {\n    const apiInstance = new SibApiV3Sdk.TransactionalEmailsApi();\n    let sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\n    console.log('called')\n\n    sendSmtpEmail.sender = {\n        name: 'Greenscapes Gardening Sevices',\n        email: 'simon@greenscapes-gardening.co.uk'\n    }\n    sendSmtpEmail.to = [\n        { email: email, name: name }        \n    ];\n    sendSmtpEmail.bcc = [{\n        email: 'simon@greenscapes-gardening.co.uk'\n    }]\n    sendSmtpEmail.replyTo = { email: email };\n    sendSmtpEmail.templateId = 1;\n    sendSmtpEmail.tags = ['support'];\n    sendSmtpEmail.params = {\n        FIRSTNAME: name,\n        MESSAGE: message,\n        PHONE: phone,\n        EMAIL: email\n    }\n    try {\n        const res = await apiInstance.sendTransacEmail(sendSmtpEmail);\n        console.log(res);\n        Promise.resolve(res);\n    } catch (error) {\n        console.log(error);\n        Promise.reject(error);\n    }\n}\n\n// create new contact\nfunction createNewContact (name, email, subject, phone, message) {\n    const apiInstance = new SibApiV3Sdk.ContactsApi();\n    let createContact = new SibApiV3Sdk.CreateContact();\n    createContact.email = email;\n    createContact.attributes = {\n        FIRSTNAME: name,\n        PHONENUMBER: phone\n    }\n    createContact.listIds = [3];\n    apiInstance.createContact(createContact)\n    .then((res) => {\n        console.log(res)\n        return ({ success: true, msg: 'User added' })\n    })\n    .catch(e => console.log(e))\n}\n\nmodule.exports = {\n    sendContactForm,\n    createNewContact\n}"]},"metadata":{},"sourceType":"script"}